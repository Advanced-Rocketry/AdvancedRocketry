buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}


plugins {
  id "com.gradle.build-scan" version "1.9"
  id "com.matthewprenger.cursegradle" version "1.1.0"
  id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.64"
}
 
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'

group= "zmaster587.advancedRocketry" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "AdvancedRocketry"
sourceCompatibility = 8
targetCompatibility = 8

jar {
        manifest {
        attributes 'FMLCorePlugin': 'zmaster587.advancedRocketry.asm.AdvancedRocketryPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
}

apply from: "gradle/scripts/getbuildnumber.gradle"
minecraft {
    version = "1.12.2-14.23.4.2739"
    runDir = "run"
    mappings = "snapshot_20170624"
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    replaceIn "src/main/java/zmaster587/advancedRocketry/AdvancedRocketry.java"
    replace "@MAJOR@", version_major
    replace "@MINOR@", version_minor
    replace "@REVIS@", version_revis
    replace "@BUILD@", project.getBuildNumber()
    
    replace "%LIBVULPESVERSION%", project.libVulpesVersion
}

apply from: "gradle/scripts/jars.gradle"
apply from: "gradle/scripts/version.gradle"

project.ext { gcbuild = "261" }
//apply from: "https://raw.githubusercontent.com/ReadOnlyDevelopment/gradle/galacticraft/dev.gradle"

String gcversion = "1.12.2-4.0.2.${project.gcbuild}"

repositories {
    ivy {
        url "https://micdoodle8.com/new-builds/"
        layout 'pattern', {
            artifact "[organization]/${project.gcbuild}/[module]-[revision].jar"
        }
        metadataSources {
            artifact()
        }
    }
}

dependencies {
    compile "GC-1.12-dev:GalacticraftCore-Dev:${gcversion}"
    compile "GC-1.12-dev:Galacticraft-API:${gcversion}"
    compile "GC-1.12-dev:Galacticraft-Planets-Dev:${gcversion}"
    compile "GC-1.12-dev:MicdoodleCore-Dev:${gcversion}"
}


repositories {
        maven {
            name = "mezz.jei"
            url = "http://dvs1.progwml6.com/files/maven"
        }
    ivy {
            name "industrialcraft-2"
            artifactPattern "http://jenkins.ic2.player.to/job/IC2_111/39/artifact/build/libs/[module]-[revision].[ext]"
        }
    ivy {
            name "Tesla"
            artifactPattern "https://addons-origin.cursecdn.com/files/2347/256/[module]-[revision].[ext]"
        }
    /*ivy {
        name "GalacticraftCore"
            artifactPattern "https://micdoodle8.com/new-builds/GC-1.12/174/[module]-[revision].[ext]"
        }*/
//    ivy {
//            name "EnderIO"
//            artifactPattern "https://addons-origin.cursecdn.com/files/2238/375/[module]-[revision].[ext]"
//        }
    ivy {
            name "LibVulpes"
            artifactPattern "http://65.78.115.159:8080/job/LibVulpes/job/libVulpes/job/1.12/" + project.libVulpesBuildNum +"/artifact/output/[module]-[revision].[ext]"
        }
}

dependencies {
    compile name: 'industrialcraft-2', version: '2.7.39-ex111-api', ext: 'jar'
    //compile name: 'Tesla', version: '1.11-1.3.0.51-deobf', ext: 'jar'
    //compile name: 'EnderIO', version: '1.7.10-2.2.8.381', ext: 'jar'
    compile name: 'LibVulpes', version: '1.12.2-' + project.libVulpesVersion  + '-' + project.libVulpesBuildNum + '-deobf', ext: 'jar'
    //compile name: 'GalacticraftCore', version: '1.12.2-4.0.1.174', ext: 'jar'
    
    // compile against the JEI API
    deobfCompile "mezz.jei:jei_1.12.2:4.8.0.110:api"
    // at runtime, use the full JEI jar
    runtime "mezz.jei:jei_1.12.2:4.8.0.110"

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

/*task deobfJar(type: Jar) {
     from sourceSets.main.output
     //if project name is BBM-Dev it makes the deobf jar deobf-dev if not its just deobf
     classifier = "deobf"
     //sets where the jars go to.
     destinationDir = file 'output'
     manifest {
        attributes 'FMLCorePlugin': 'zmaster587.advancedRocketry.asm.AdvancedRocketryPlugin'
        attributes 'FMLCorePluginContainsFMLMod': 'true'
    }
     mustRunAfter "jar" 
}*/

curseforge{
  if (project.hasProperty("thecursedkey")) {
        apiKey = project.thecursedkey
    }
    else {
    apiKey = ""
    }
  project {
  //AdvancedRocketry
    id = "236542"
    relations {
        requiredDependency 'libvulpes'
    }
    changelog = file('changelog.html')
    changelogType = 'html'
    releaseType = "beta"
    addGameVersion minecraft.version
    mainArtifact(jar) {
      displayName = "AdvancedRocketry ${project.version} build " + project.getBuildNumber() +  " for " + minecraft.version
    }
    addArtifact (deobfJar){
         displayName = "AdvancedRocketry ${project.version}-deobf build " + project.getBuildNumber() + " for " + minecraft.version
    }
   }
}

// Commented out until jenkins supports newer verisons of java
task makeChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    file = new File ("changelog.html")
    untaggedName = "Current release ${project.version}"
    
    //Get the last commit from the cache or config if no cache exists
    File newFile = rootProject.file('lasthash.txt')
    if (!newFile.exists()) fromCommit = startGitRev
    else fromCommit = newFile.text.trim()
    
    //get the latest commit and write it to the cache file
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    newFile.delete()
    newFile << stdout.toString().trim()
    
    toRef =  "HEAD"
    gitHubIssuePattern = "nonada123";
    templateContent = """
{{#tags}}
<h1> Highly untested and may break world</h1>
  <h3>{{name}}</h3>
  <ul>
    {{#commits}}
    <li> <a href="https://github.com/zmaster587/AdvancedRocketry/commit/{{hash}}" target=_blank> {{{message}}}</a>
</li>
    {{/commits}}
  </ul>
{{/tags}}
"""
}

tasks.build.dependsOn makeChangelog

/*buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service' 
    licenseAgree = 'yes'                                        

    publishAlways() 

    if (System.getenv('CI')) {
        tag 'CI'
    } else {
        tag 'Local'
    }

    tag System.getProperty('os.name')                                            
}
*/
