package zmaster587.advancedRocketry.world;

import net.minecraft.world.biome.Biome;
<<<<<<< HEAD
import net.minecraft.world.biome.Biomes;
import net.minecraft.world.gen.INoiseRandom;
import net.minecraft.world.gen.layer.traits.IC0Transformer;
import zmaster587.advancedRocketry.api.AdvancedRocketryBiomes;
=======
import net.minecraft.world.gen.layer.GenLayer;
import net.minecraft.world.gen.layer.IntCache;
import net.minecraftforge.common.BiomeManager.BiomeEntry;
>>>>>>> origin/feature/nuclearthermalrockets

import java.util.ArrayList;
import java.util.List;

public class GenLayerBiomePlanet implements IC0Transformer {

	private List<Biome> biomes;
	private static List<Biome> biomeEntries;

	int biomeLimiter = -1;

	public GenLayerBiomePlanet(List<Biome> biomes)
	{
<<<<<<< HEAD
		biomeEntries = biomes;

	}

	@Override
	public int apply(INoiseRandom context, int value) {
		if(biomeEntries.isEmpty())
			return AdvancedRocketryBiomes.getBiomeId(Biomes.OCEAN.getRegistryName());
		return AdvancedRocketryBiomes.getBiomeId(biomeEntries.get(context.random(biomeEntries.size())));
=======
		super(p_i2122_1_);

		this.parent = p_i2122_3_;

		biomeEntries = new ArrayList<>();

	}

	//Used to set the usableBiomes
	public static synchronized void setupBiomesForUse(List<BiomeEntry> entries) {
		biomeEntries = entries;
	}

	/**
	 * Returns a list of integer values generated by this layer. These may be interpreted as temperatures, rainfall
	 * amounts, or biomeList[] indices based on the particular GenLayer subclass.
     */
	@Override
	public int[] getInts(int p_75904_1_, int p_75904_2_, int p_75904_3_, int p_75904_4_)
	{
		//int[] aint = this.parent.getInts(p_75904_1_, p_75904_2_, p_75904_3_, p_75904_4_);
		int[] aint1 = IntCache.getIntCache(p_75904_3_ * p_75904_4_);
		
		for (int i1 = 0; i1 < p_75904_4_; ++i1)
		{
			for (int j1 = 0; j1 < p_75904_3_; ++j1)
			{
				this.initChunkSeed(j1 + p_75904_1_, i1 + p_75904_2_);
				
				aint1[j1 + i1 * p_75904_3_] = Biome.getIdForBiome(getWeightedBiomeEntry().biome);
			
			}
		}

		//TODO: DEBUG:
		//Arrays.fill(aint1, BiomeGenBase.desert.biomeID);
		
		return aint1;
	}

	protected BiomeEntry getWeightedBiomeEntry()
	{
		if(biomeEntries == null || biomeEntries.isEmpty())
			return new BiomeEntry(Biomes.OCEAN, 100);

		List<BiomeEntry> biomeList = biomeEntries;
		int totalWeight = WeightedRandom.getTotalWeight(biomeList);
		int weight = nextInt(totalWeight);
		return WeightedRandom.getRandomItem(biomeList, weight);
>>>>>>> origin/feature/nuclearthermalrockets
	}
}
